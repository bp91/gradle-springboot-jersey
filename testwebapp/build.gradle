buildscript {
	ext {
		springBootVersion = '2.0.5.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
  id "com.moowork.node" version "1.2.0"
  id "com.moowork.grunt" version "1.2.0"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
// apply plugin: 'war'

group = 'it'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

// configurations {
// 	providedRuntime
// 	// compile.exclude module: "spring-boot-starter-tomcat"
// }

dependencies {
	compile group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version: '2.27'
	compile group: 'org.springframework', name: 'spring-web', version: '5.0.9.RELEASE'
	compile group: 'com.google.guava', name: 'guava', version: '26.0-jre'
	compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.12'
	compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '2.0.5.RELEASE'
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-jersey')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
	compile('org.postgresql:postgresql:42.2.5')
	compile('org.flywaydb:flyway-gradle-plugin:5.1.4')
	compile("org.springframework.boot:spring-boot-starter-tomcat")
	// compile("org.springframework.boot:spring-boot-starter-jetty")
	// compile('org.springframework.boot:spring-boot-starter-hateoas')
	// providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	// providedRuntime('org.springframework.boot:spring-boot-starter-jetty')
	// providedRuntime('org.springframework.boot:spring-boot-starter-hateoas')
	testCompile('com.h2database:h2:1.4.197')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

bootRun {
	
	dependsOn 'gruntExec'

	if(project.hasProperty('args')) {
        args project.args.split(',')
    }
}

task gruntExec(type: Exec) {
	dependsOn 'installNpm'
	
	commandLine 'grunt', 'build'
}

task installNpm(type: Exec) {
	commandLine 'npm', 'install'
}